{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","className","concat","mode","children","_jsxs","type","href","onClick","toggleMode","id","htmlFor","TextForm","text","setText","useState","_Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleClearClick","handleCopy","navigator","clipboard","writeText","handleExtraSpaces","split","join","filter","element","defaultProps","title","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","Date","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03338740.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n\r\n        <ul\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <li className=\"nav-item\">\r\n            {/* <a className=\"nav-link\" aria-current=\"page\" href=\"\">\r\n                Home\r\n              </a> */}\r\n\r\n            <a className=\"nav-link\" aria-current=\"page\" href=\"\">\r\n              Home\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link> */}\r\n          </li>\r\n        </ul>\r\n        <div\r\n          className={`form-check form-switch text-${\r\n            props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n        >\r\n          <input\r\n            className=\"form-check-input\"\r\n            onClick={props.toggleMode}\r\n            type=\"checkbox\"\r\n            id=\"flexSwitchCheckDefault\"\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n            Enable DarkMode\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value) \r\n    }\r\n\r\n    // Credits: A\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text); \r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    // Credits: Coding Wala\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState(''); \r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \r\n            <h1 className='mb-4'>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\n// import About from \"./components/About\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"./components/Alert\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route\r\n// } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\"); // Whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#042743\";\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <Router> */}\r\n      <Navbar\r\n        title=\"TextUtils\"\r\n        mode={mode}\r\n        toggleMode={toggleMode}\r\n        key={new Date()}\r\n      />\r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\">\r\n        {/* <Switch> */}\r\n        {/* /users --> Component 1\r\n        /users/home --> Component 2 */}\r\n        {/* <Route exact path=\"/about\">\r\n              <About mode={mode} />\r\n            </Route> */}\r\n        {/* <Route exact path=\"/\"> */}\r\n        <TextForm\r\n          showAlert={showAlert}\r\n          heading=\"Try TextUtils - word counter, character counter, remove extra spaces\"\r\n          mode={mode}\r\n        />\r\n        {/* </Route>\r\n          </Switch> */}\r\n      </div>\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}